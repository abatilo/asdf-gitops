name: Main workflow
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: build-matrix
        # Find all leaf level directories and reduce into JSON object
        run: |
          matrix="$(find terraform -mindepth 2 -type d  | cut -c 11- | jq -R '[.]' | jq -sc 'add | {dir: .}')"
          echo "::set-output name=matrix::${matrix}"
  terraform:
    needs:
      - terraform-matrix
    runs-on: ubuntu-18.04
    strategy:
      matrix: ${{ fromJson(needs.terraform-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: asdf setup
        uses: asdf-vm/actions/setup@v1
      - name: asdf install
        working-directory: terraform/${{ matrix.dir }}
        run: |
          asdf plugin-add terraform
          asdf install
          
      - name: Terraform Plan
        id: plan
        working-directory: terraform/${{ matrix.dir }}
        # Follows tips from:
        # https://github.community/t/set-output-truncates-multiline-strings/16852/5
        run: |
          fmt_stdout="$(terraform fmt)"
          fmt_stdout="${fmt_stdout//'%'/'%25'}"
          fmt_stdout="${fmt_stdout//$'\n'/'%0A'}"
          fmt_stdout="${fmt_stdout//$'\r'/'%0D'}"
          fmt_outcome=$([ "$?" == 0 ] && echo "success" || echo "failure")
          
          echo "::set-output name=fmt-stdout::${fmt_stdout}
          echo "::set-output name=fmt-outcome::${fmt_outcome}
          
          plan_stdout="$(terraform plan -no-color -detailed-exitcode)"
          plan_stdout="${plan_stdout//'%'/'%25'}"
          plan_stdout="${plan_stdout//$'\n'/'%0A'}"
          plan_stdout="${plan_stdout//$'\r'/'%0D'}"
          echo "::set-output name=plan-stdout::${plan_stdout}"
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### \`${{ matrix.dir }}\`
            #### terraform fmt: \`${{ steps.plan.outputs.fmt_outcome }}\`
            <details><summary>Show fmt</summary>

            \`\`\`
            ${{ steps.plan.outputs.fmt_stdout }}
            \`\`\`

            </details>
            
            \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
