name: Main workflow
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: asdf setup
        uses: asdf-vm/actions/setup@v1
      - name: asdf install
        run: |
          pwd
          ls -lah
          asdf plugin-add terraform
          asdf install

      - name: Terraform fmt
        id: fmt
        working-directory: "./terraform"
        run: terraform fmt
        continue-on-error: true
      - name: Terraform Init
        id: init
        working-directory: "./terraform"
        run: terraform init
      - name: Terraform Validate
        id: validate
        working-directory: "./terraform"
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        working-directory: "./terraform"
        # Follows tips from:
        # https://github.community/t/set-output-truncates-multiline-strings/16852/5
        run: |
          RAW_PLAN="$(terraform plan -no-color)"
          RAW_PLAN="${RAW_PLAN//'%'/'%25'}"
          RAW_PLAN="${RAW_PLAN//$'\n'/'%0A'}"
          RAW_PLAN="${RAW_PLAN//$'\r'/'%0D'}"
          echo "::set-output name=stdout::${RAW_PLAN}"
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
