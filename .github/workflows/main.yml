name: Main workflow
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: build-matrix
        # Find all leaf level directories and reduce into JSON object
        run: |
          matrix="$(find terraform -mindepth 2 -type d  | cut -c 11- | jq -R '[.]' | jq -sc 'add | {dir: .}')"
          echo "::set-output name=matrix::${matrix}"
  helmfile:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Cache hit means there are changes to vet
      - name: Cache helmfile
        id: cache-helmfile
        uses: actions/cache@v2
        env:
          cache-name: cache-helmfile
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            helmfile
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('helmfile/*') }}
      - name: asdf setup
        if: steps.cache-helmfile.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/setup@v1
      - name: asdf install
        if: steps.cache-helmfile.outputs.cache-hit != 'true'
        working-directory: "./helmfile"
        run: |
          asdf plugin-add helm
          asdf plugin-add helmfile
          asdf install
          helm plugin install https://github.com/databus23/helm-diff --version v3.1.2
      - name: Create kind cluster
        if: steps.cache-helmfile.outputs.cache-hit != 'true'
        uses: helm/kind-action@v1.0.0
      - name: helmfile diff
        if: steps.cache-helmfile.outputs.cache-hit != 'true'
        id: diff
        working-directory: "./helmfile"
        # Follows tips from:
        # https://github.community/t/set-output-truncates-multiline-strings/16852/5
        run: |
          RAW_PLAN="$(helmfile --no-color diff)"
          RAW_PLAN="${RAW_PLAN//'%'/'%25'}"
          RAW_PLAN="${RAW_PLAN//$'\n'/'%0A'}"
          RAW_PLAN="${RAW_PLAN//$'\r'/'%0D'}"
          echo "::set-output name=stdout::${RAW_PLAN}"
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "helmfile\n${{ steps.diff.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Helmfile Diff: \`${{ steps.diff.outcome }}\`

            <details><summary>Show Diff</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  terraform:
    needs:
      - terraform-matrix
    runs-on: ubuntu-18.04
    strategy:
      matrix: ${{ fromJson(needs.terraform-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: asdf setup
        uses: asdf-vm/actions/setup@v1
      - name: asdf install
        working-directory: terraform/${{ matrix.dir }}
        run: |
          asdf plugin-add terraform
          asdf install

      - name: Terraform fmt
        id: fmt
        working-directory: terraform/${{ matrix.dir }}
        run: terraform fmt
        continue-on-error: true
      - name: Terraform Init
        id: init
        working-directory: terraform/${{ matrix.dir }}
        run: terraform init
      - name: Terraform Validate
        id: validate
        working-directory: terraform/${{ matrix.dir }}
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        working-directory: terraform/${{ matrix.dir }}
        # Follows tips from:
        # https://github.community/t/set-output-truncates-multiline-strings/16852/5
        run: |
          RAW_PLAN="$(terraform plan -no-color)"
          RAW_PLAN="${RAW_PLAN//'%'/'%25'}"
          RAW_PLAN="${RAW_PLAN//$'\n'/'%0A'}"
          RAW_PLAN="${RAW_PLAN//$'\r'/'%0D'}"
          echo "::set-output name=stdout::${RAW_PLAN}"
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### \`${{ matrix.dir }}\`
            #### Terraform Format and Style: \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization: \`${{ steps.init.outcome }}\`
            #### Terraform Validation: \`${{ steps.validate.outcome }}\`
            #### Terraform Plan: \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
